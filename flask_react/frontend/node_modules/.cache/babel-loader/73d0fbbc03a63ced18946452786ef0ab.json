{"ast":null,"code":"var _jsxFileName = \"/Users/harsh/Desktop/react_flask_tutorials/todo_single/frontend/src/Pages/TodoPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { AddTodoForm } from \"../Components/AddTodoForm\";\nimport { TodoItem } from \"../Components/TodoItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoPage = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [todo, setTodo] = useState(\"\");\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:5000/api\", {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }).then(response => setTodos(response));\n  }, []);\n\n  const handleAddInputChange = e => {\n    setTodo(e.target.value);\n  };\n\n  const handleAddFormSubmit = e => {\n    e.preventDefault();\n\n    if (todo !== \"\") {\n      setTodos([...todos, {\n        id: todo.length + 1,\n        content: todo.trim()\n      }]);\n    }\n\n    fetch(\"http://127.0.0.1:5000/api/create\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        content: todo\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(response => {\n      setTodo(\"\");\n      getLatestTodos();\n    });\n  };\n\n  const getLatestTodos = () => {\n    fetch(\"http://127.0.0.1:5000/api\").then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }).then(response => setTodo(response));\n  };\n\n  useEffect(() => {\n    fetch(`http://127.0.0.1:5000/api/${id}`).then(response => {\n      response.json();\n    }).then(response => setTodos(response));\n  }, [id]);\n\n  const handleDeleteClick = id => {\n    fetch(`http://127.0.0.1:5000/api/${id}`, {\n      methood: \"POST\",\n      body: JSON.stringify({\n        id: id\n      })\n    }).then(response => response.json()).then(data => console.log(data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AddTodoForm, {\n      todo: todo,\n      onAddFormSubmit: handleAddFormSubmit,\n      onAddInputChange: handleAddInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n        todo: todo // onEditClick={}\n        ,\n        onDeleteClick: handleDeleteClick\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoPage, \"5ZGLgS+vB2gUW6/gXl0F2NJZOrw=\", true);\n\n_c = TodoPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoPage\");","map":{"version":3,"sources":["/Users/harsh/Desktop/react_flask_tutorials/todo_single/frontend/src/Pages/TodoPage.js"],"names":["React","useEffect","useState","AddTodoForm","TodoItem","TodoPage","todos","setTodos","todo","setTodo","id","useParams","fetch","method","headers","then","response","ok","json","handleAddInputChange","e","target","value","handleAddFormSubmit","preventDefault","length","content","trim","body","JSON","stringify","getLatestTodos","handleDeleteClick","methood","data","console","log","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { AddTodoForm } from \"../Components/AddTodoForm\"\nimport { TodoItem } from \"../Components/TodoItem\"\n\nexport const TodoPage = () => {\n    const [todos, setTodos] = useState([])\n    const [todo, setTodo] = useState(\"\")\n    const { id } = useParams()\n\n    useEffect(() => {\n        fetch(\"http://127.0.0.1:5000/api\", {\n            method: \"GET\",\n            headers: {\n                \"Content-type\": \"application/json\",\n            },\n        })\n            .then((response) => {\n                if (response.ok) {\n                    return response.json()\n                }\n            })\n            .then((response) => setTodos(response))\n    }, [])\n\n    const handleAddInputChange = (e) => {\n        setTodo(e.target.value)\n    }\n    const handleAddFormSubmit = (e) => {\n        e.preventDefault()\n        if (todo !== \"\") {\n            setTodos([\n                ...todos,\n                {\n                    id: todo.length + 1,\n                    content: todo.trim(),\n                },\n            ])\n        }\n        fetch(\"http://127.0.0.1:5000/api/create\", {\n            method: \"POST\",\n            body: JSON.stringify({ content: todo }),\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        })\n            .then((response) => response.json())\n            .then((response) => {\n                setTodo(\"\")\n                getLatestTodos()\n            })\n    }\n\n    const getLatestTodos = () => {\n        fetch(\"http://127.0.0.1:5000/api\")\n            .then((response) => {\n                if (response.ok) {\n                    return response.json()\n                }\n            })\n            .then((response) => setTodo(response))\n    }\n\n    useEffect(() => {\n        fetch(`http://127.0.0.1:5000/api/${id}`)\n            .then((response) => {\n                response.json()\n            })\n            .then((response) => setTodos(response))\n    }, [id])\n\n    const handleDeleteClick = (id) => {\n        fetch(`http://127.0.0.1:5000/api/${id}`, {\n            methood: \"POST\",\n            body: JSON.stringify({ id: id }),\n        })\n            .then((response) => response.json())\n            .then((data) => console.log(data))\n    }\n\n    return (\n        <div>\n            <AddTodoForm\n                todo={todo}\n                onAddFormSubmit={handleAddFormSubmit}\n                onAddInputChange={handleAddInputChange}\n            />\n            <ul>\n                {todos.map((todo) => (\n                    <TodoItem\n                        key={todo.id}\n                        todo={todo}\n                        // onEditClick={}\n                        onDeleteClick={handleDeleteClick}\n                    />\n                ))}\n            </ul>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}