{"ast":null,"code":"'use strict';\n\nvar utils = require('./../utils');\n\nvar settle = require('./../core/settle');\n\nvar cookies = require('./../helpers/cookies');\n\nvar buildURL = require('./../helpers/buildURL');\n\nvar buildFullPath = require('../core/buildFullPath');\n\nvar parseHeaders = require('./../helpers/parseHeaders');\n\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\n\nvar transitionalDefaults = require('../defaults/transitional');\n\nvar AxiosError = require('../core/AxiosError');\n\nvar CanceledError = require('../cancel/CanceledError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    var request = new XMLHttpRequest(); // HTTP basic authentication\n\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true); // Set the request timeout in MS\n\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      } // Prepare the response\n\n\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' || responseType === 'json' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response); // Clean up request\n\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        } // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n\n\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        } // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n\n\n        setTimeout(onloadend);\n      };\n    } // Handle browser request cancellation (as opposed to a manual cancellation)\n\n\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request)); // Clean up request\n\n      request = null;\n    }; // Handle low level network errors\n\n\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request, request)); // Clean up request\n\n      request = null;\n    }; // Handle timeout\n\n\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || transitionalDefaults;\n\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n\n      reject(new AxiosError(timeoutErrorMessage, transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED, config, request)); // Clean up request\n\n      request = null;\n    }; // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n\n\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    } // Add headers to the request\n\n\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    } // Add withCredentials to request if needed\n\n\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    } // Add responseType to request if needed\n\n\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    } // Handle progress if needed\n\n\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    } // Not all browsers support upload events\n\n\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function (cancel) {\n        if (!request) {\n          return;\n        }\n\n        reject(!cancel || cancel && cancel.type ? new CanceledError() : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    var tokens = fullPath.split(':', 2);\n    var protocol = tokens.length > 1 && tokens[0];\n\n    if (protocol && ['http', 'https', 'file'].indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    } // Send the request\n\n\n    request.send(requestData);\n  });\n};","map":{"version":3,"sources":["/Users/harsh/Desktop/react_flask_tutorials/todo/frontend/node_modules/axios/lib/adapters/xhr.js"],"names":["utils","require","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","transitionalDefaults","AxiosError","CanceledError","module","exports","xhrAdapter","config","Promise","dispatchXhrRequest","resolve","reject","requestData","data","requestHeaders","headers","responseType","onCanceled","done","cancelToken","unsubscribe","signal","removeEventListener","request","XMLHttpRequest","auth","username","password","unescape","encodeURIComponent","Authorization","btoa","fullPath","baseURL","url","open","method","toUpperCase","params","paramsSerializer","timeout","onloadend","responseHeaders","getAllResponseHeaders","responseData","responseText","response","status","statusText","_resolve","value","_reject","err","onreadystatechange","handleLoad","readyState","responseURL","indexOf","setTimeout","onabort","handleAbort","ECONNABORTED","onerror","handleError","ERR_NETWORK","ontimeout","handleTimeout","timeoutErrorMessage","transitional","clarifyTimeoutError","ETIMEDOUT","isStandardBrowserEnv","xsrfValue","withCredentials","xsrfCookieName","read","undefined","xsrfHeaderName","forEach","setRequestHeader","val","key","toLowerCase","isUndefined","onDownloadProgress","addEventListener","onUploadProgress","upload","cancel","type","abort","subscribe","aborted","tokens","split","protocol","length","ERR_BAD_REQUEST","send"],"mappings":"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","sourcesContent":["'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar transitionalDefaults = require('../defaults/transitional');\nvar AxiosError = require('../core/AxiosError');\nvar CanceledError = require('../cancel/CanceledError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new CanceledError() : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    var tokens = fullPath.split(':', 2);\n    var protocol = tokens.length > 1 && tokens[0];\n\n    if (protocol && [ 'http', 'https', 'file' ].indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n"]},"metadata":{},"sourceType":"script"}